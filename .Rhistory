e_subset <- subgraph(enron2, member_nodes)
len(V(e_subset))
length(V(e_subset))
length(E(e_subset))
plot(e_subset)
which(c(1, 0, 0 2))
which(c(1, 0, 0, 2))
which(c(T, F, F, T))
min(weak_components$membership)
max(weak_components$membership)
tail(sort(strong_components$csize))
tail(sort(strong_components$csize))[-1]
tail(sort(strong_components$csize))[-1:]
tail(sort(strong_components$csize))[5]
component_size_6 <- strong_components$csize == 6
component_number <- which(component_size_6)
member_nodes <- strong_components$membership == component_number
e_subset <- subgraph(enron2, member_nodes)
plot(e_subset)
enron_node_in <- degree(enron, mode="in")
nodelist <- c("H1", "H2", "H3", "H4", "H5", "H6", "C1", "C2", "O")
edgelist <- data.frame(from=c("H1", "H2", "H3", "H4", "H5", "C1", "O", "H6"), to=c("C1", "C1", "C1", "C2", "C2", "C2", "C2", "O"))
ethanol <- graph_from_data_frame(edgelist, directed=FALSE, vertices = nodelist)
distances(ethanol)
node_btwn <- betweenness(enron2)
length(node_btwn)
node_deg <- degree(enron2)
?node_eccentricity
?centrality
?page.rank
rnk <- page.rank(enron2)
names(rnk)
rnk$options
rnk$value
rnk$vector
max(rnk$vector)
min(rnk$vector)
?centrality
max_strong <- max(strong_components$csize)
max_members <- which(strong_components$csize==max_strong)
max_comp_no <- which(strong_components$csize==max_strong)
max_members <- strong_components$membership==max_comp_no
maincomp <- subgraph(enron2, max_members)
b <- between(maincomp)
b <- betweeness(maincomp)
b <- betweenness(maincomp)
strong_comp_memb <- strong_components$membership
weak_comp_memb <- weak_components$membership
node_deg <- degree(enron2)
node_rank <- page.rank(enron2)
enron_node_data <- data.frame(id = E(enron2),
degree <- node_deg,
rank = node_rank,
strong_component_id = strong_comp_memb,
weak_component_id = weak_comp_memb
)
p <- page_rank(enron2)
names(p)
p$vector
strong_comp_memb <- strong_components$membership
weak_comp_memb <- weak_components$membership
node_deg <- degree(enron2)
node_rank <- page_rank(enron2)$vector
enron_node_data <- data.frame(id = E(enron2),
degree <- node_deg,
rank = node_rank,
strong_component_id = strong_comp_memb,
weak_component_id = weak_comp_memb
)
names(node_deg)
strong_comp_memb <- strong_components$membership
weak_comp_memb <- weak_components$membership
node_deg <- degree(enron2)
node_rank <- page_rank(enron2)$vector
enron_node_data <- data.frame(id = E(enron2),
degree <- node_deg,
rank = node_rank,
strong_component_id = strong_comp_memb,
weak_component_id = weak_comp_memb
)
enron_node_data <- data.frame(id = E(enron2),
#      degree <- node_deg,
#       rank = node_rank,
strong_component_id = strong_comp_memb,
weak_component_id = weak_comp_memb
)
enron_node_data <- data.frame(id = E(enron2),
#      degree <- node_deg,
#       rank = node_rank,
#       strong_component_id = strong_comp_memb,
#       weak_component_id = weak_comp_memb
)
enron_node_data <- data.frame(id = E(enron2)
#      degree <- node_deg,
#       rank = node_rank,
#       strong_component_id = strong_comp_memb,
#       weak_component_id = weak_comp_memb
)
str(E(enron2))
names(E(enron2))
enron_node_data <- data.frame(id = V(enron2),
degree <- node_deg,
rank = node_rank,
strong_component_id = strong_comp_memb,
weak_component_id = weak_comp_memb
)
nid <- V(enron2)
as.numeric(nid)
strong_comp_memb <- strong_components$membership
weak_comp_memb <- weak_components$membership
node_deg <- degree(enron2)
node_rank <- page_rank(enron2)$vector
nid <- as.numeric(V(enron2))
enron_node_data <- data.frame(id = nid,
degree <- node_deg,
rank = node_rank,
strong_component_id = strong_comp_memb,
weak_component_id = weak_comp_memb
)
View(enron_node_data)
enron_node_data <- data.frame(
#id = nid,
degree <- node_deg,
rank = node_rank,
strong_component_id = strong_comp_memb,
weak_component_id = weak_comp_memb
)
View(enron_node_data)
e1 <- c("102"= 837, "101"=737, "103"=627)
e2 <- c("101"="A", "102"="B", "103"="C")
df = data.frame(v1 = e1, v2 = e2)
View(df)
View(df)
enron_node_data <- data.frame(
#id = nid,
degree <- node_deg,
rank = node_rank,
strong_component_id = strong_comp_memb,
weak_component_id = weak_comp_memb
)
View(enron_node_data)
enron_node_data <- data.frame(
id = nid,
original_id = names(nid),
degree <- node_deg,
rank = node_rank,
strong_component_id = strong_comp_memb,
weak_component_id = weak_comp_memb
)
names(nid)
names(V(enron2))
enron_node_data <- data.frame(
degree <- node_deg,
rank = node_rank,
strong_component_id = strong_comp_memb,
weak_component_id = weak_comp_memb
)
View(enron_node_data)
nodelist <- c("H1", "H2", "H3" ,"H4", "H5", "H6", "C1", "C2", "C3")
edgelist <- data.frame(from = c("H1", "H2", "C1", "C2", "C2", "C3", "C3", "C3"),
to  =  c("C1", "C1", "C2", "H3", "C3", "H4", "H5", "H6")
)
my_graph <- graph_from_data_frame(edgelist, directed=FALSE, vertices = nodelist)
# Density of the network
edge_density(my_graph)
# Degree of each node in the network
degree(my_graph)
# visualize the network
plot(my_graph)
my_graph <- graph_from_data_frame(edgelist, directed=FALSE, vertices = nodelist)
# Density of the network
edge_density(my_graph)
# Degree of each node in the network
degree(my_graph)
# visualize the network
plot(my_graph)
nodelist <- c("H1", "H2", "H3" ,"H4", "H5", "H6", "C1", "C2", "C3")
edgelist <- data.frame(from = c("H1", "H2", "C1", "C2", "C2", "C3", "C3", "C3"),
to  =  c("C1", "C1", "C2", "H3", "C3", "H4", "H5", "H6")
)
my_graph <- graph_from_data_frame(edgelist, directed=FALSE, vertices = nodelist)
library(ggraph)
library(tidygraph)
tblcule <- as_tbl_graph(my_graph)
tblcule %>%
ggplot() +
geom_edge_fan() +
geom_node_point()
highschool
tblcule <- as_tbl_graph(edgelist)
tblcule <- as_tbl_graph(head(edgelist, n=20))
tblcule %>%
ggplot() +
geom_edge_fan() +
geom_node_point()
my_graph %>%
ggraph() +
geom_edge_fan() +
geom_node_point()
tblcule <- as_tbl_graph(my_graph)
tblcule %>%
ggraph() +
geom_edge_fan() +
geom_node_point()
my_graph <- graph_from_data_frame(edgelist, directed=TRUE, vertices = nodelist)
my_graph %>%
ggraph() +
geom_edge_fan() +
geom_node_point()
my_graph %>%
ggraph() +
geom_edge_fan() +
geom_node_point(aes(size=3))
my_graph %>%
ggraph() +
geom_edge_fan(show.legend = FALSE) +
geom_node_point(aes(size=3))
my_graph %>%
ggraph() +
geom_edge_fan(show.legend = FALSE) +
geom_node_point(aes(size=3), show.legend = FALSE)
my_graph %>%
ggraph() +
geom_edge_fan(show.legend = FALSE) +
geom_node_point(aes(size=3), show.legend = FALSE) +
geom_node_tile()
my_graph %>%
ggraph() +
geom_edge_fan(show.legend = FALSE) +
geom_node_point(aes(size=3), show.legend = FALSE) +
geom_node_tile(aes(size=3))
library(tidygraph)
flareGraph <- tbl_graph(flare$vertices, flare$edges) %>%
mutate(class = map_bfs_chr(node_is_root(),
.f = function(node, dist, path, ...) {if (dist <= 1) {
return(shortName[node])
}
path$result[[nrow(path)]]
})
)
ggraph(flareGraph,'treemap', weight = size) +
geom_node_tile(aes(fill = class, filter = leaf, alpha = depth), colour = NA) +
geom_node_tile(aes(size = depth), colour ='white') +
scale_alpha(range = c(1, 0.5), guide ='none') +
scale_size(range = c(4, 0.2), guide ='none')
ggraph(flareGraph,'treemap', weight = size) +
geom_node_tile(aes(fill = class, filter = leaf, alpha = depth), colour = NA) +
geom_node_text(aes(size = depth), colour ='white') +
scale_alpha(range = c(1, 0.5), guide ='none') +
scale_size(range = c(4, 0.2), guide ='none')
my_graph %>%
ggraph() +
geom_edge_fan(show.legend = FALSE) +
geom_node_point(aes(size=3), show.legend = FALSE) +
geom_node_text(aes(size=3))
my_graph %>%
ggraph() +
geom_edge_fan(show.legend = FALSE) +
geom_node_point(aes(size=3), show.legend = FALSE) +
geom_node_text(aes(size=3))
require(tidygraph)
gr <- create_notable('bull') %>%
mutate(class = sample(letters[1:3], n(), replace = TRUE))
ggraph(gr,'stress') +
geom_node_point(aes(label = class))ggraph(gr,'stress') +
geom_node_label(aes(label = class), repel = TRUE)
ggraph(gr,'stress') +
geom_node_point(aes(label = class))ggraph(gr,'stress') +
geom_node_label(aes(label = class), repel = TRUE)
ggraph(gr) +
geom_node_point(aes(label = class))ggraph(gr,'stress') +
geom_node_label(aes(label = class), repel = TRUE)
ggraph(gr) +
geom_node_point(aes(label = class))
ggraph(gr,'stress') +
geom_node_label(aes(label = class), repel = TRUE)
ggraph(gr) +
geom_node_label(aes(label = class), repel = TRUE)
ggraph(gr) +
geom_node_point(aes(label = class)) +
geom_node_label
ggraph(gr) +
geom_node_point(aes(label = class)) +
geom_node_label()
ggraph(gr) +
geom_node_point(aes(label = class)) +
geom_node_label(aes(lavbel=class))
ggraph(gr) +
geom_node_point(aes(label = class)) +
geom_node_label(aes(label=class))
ggraph(gr) +
geom_node_point(aes(label = class)) +
geom_node_label(aes(label=class), repel=TRUE)
ggraph(gr) +
geom_node_label(aes(label = class))
str(my_graph)
my_graph %>%
ggraph() +
geom_edge_fan(show.legend = FALSE) +
geom_node_label()
my_graph %>%
ggraph() +
geom_edge_fan(show.legend = FALSE) +
geom_node_label(aes(label=id))
names(tblcule)
V(my_graph)
my_graph %>%
mutate(names =V(my_graph)) %>%
ggraph() +
geom_edge_fan(show.legend = FALSE) +
geom_node_label(aes(label=names))
my_graph %>%
as_tbl_graph() %>%
mutate(names =V(my_graph)) %>%
ggraph() +
geom_edge_fan(show.legend = FALSE) +
geom_node_label(aes(label=names))
V(my_graph)$lbl <- V(my_graph)
my_graph %>%
as_tbl_graph() %>%
ggraph() +
geom_edge_fan(show.legend = FALSE) +
geom_node_label(aes(label=lbl))
names(V(my_graph))
V(my_graph)$lbl <- names(V(my_graph))
my_graph %>%
as_tbl_graph() %>%
ggraph() +
geom_edge_fan(show.legend = FALSE) +
geom_node_label(aes(label=lbl))
View(edgelist)
plot(my_graph)
nodelist <- c("H1", "H2", "H3" ,"H4", "H5", "H6", "C1", "C2", "C3")
edgelist <- data.frame(from = c("H1", "H2", "C1", "C2", "C2", "C3", "C3", "C3"),
to  =  c("C1", "C1", "C2", "H3", "C3", "H4", "H5", "H6")
)
my_graph <- graph_from_data_frame(edgelist, directed=TRUE, vertices = nodelist)
plot(my_graph)
?plot.igraph
plot(my_graph, vertex.size=2)
plot(my_graph, vertex.size=5)
plot(my_graph, vertex.size=10)
plot(my_graph, vertex.size=15)
?pass_if
hist(enron_node_degrees)
enron_node_degrees <- degree(enron)
ggplot(enron2) +
geom_histogram()
ggplot(data.frame(deg = enron2), aes(deg)) +
geom_histogram()
ggplot(data.frame(deg = degree(enron2)), aes(deg)) +
geom_histogram()
ggplot(data.frame(deg = degree(enron2)), aes(deg)) +
geom_histogram() +
scale_y_log10()
strong_comp_memb <- strong_components$membership
weak_comp_memb <- weak_components$membership
node_deg <- degree(enron2)
node_rank <- page_rank(enron2)$vector
nid <- as.numeric(V(enron2))
enron_node_data <- data.frame(
degree <- node_deg,
rank = node_rank,
strong_component_id = strong_comp_memb,
weak_component_id = weak_comp_memb
)
head(enron_node_data)
enron_node_data %>%
ggplot(aes(degree)) +
geom_histogram(binwidth = 500) +
scale_y_log10() +
theme_bw()
enron_node_data %>%
ggplot(aes(degree)) +
geom_histogram(binwidth = 200) +
scale_y_log10() +
theme_bw()
enron_node_data %>%
ggplot(aes(degree)) +
geom_histogram(binwidth = 100) +
scale_y_log10() +
theme_bw()
enron_node_data %>%
ggplot(aes(degree)) +
geom_histogram(binwidth = 150) +
scale_y_log10() +
theme_bw()
enron_node_data %>%
ggplot(aes(degree)) +
geom_histogram(binwidth = 200) +
scale_y_log10() +
theme_bw()
enron_node_data %>%
ggplot(aes(degree, fill="pink")) +
geom_histogram(binwidth = 200) +
scale_y_log10() +
theme_bw()
enron_node_data %>%
ggplot(aes(degree, fill="#9398A5")) +
geom_histogram(binwidth = 200) +
scale_y_log10() +
theme_bw()
enron_node_data %>%
ggplot(aes(degree, fill="#9398A5")) +
geom_histogram(binwidth = 200) +
scale_y_log10() +
theme_bw()
enron_node_data %>%
ggplot(aes(degree, color="#9398A5")) +
geom_histogram(binwidth = 200) +
scale_y_log10() +
theme_bw()
enron_node_data %>%
ggplot(aes(degree, color="#9398A5", fill="#9398A5")) +
geom_histogram(binwidth = 200) +
scale_y_log10() +
theme_bw()
enron_node_data %>%
ggplot(aes(degree)) +
geom_histogram(aes(fill="#9898a5"), binwidth = 200) +
scale_y_log10() +
theme_bw()
enron_node_data %>%
ggplot(aes(degree)) +
geom_histogram(fill="#9898a5", binwidth = 200) +
scale_y_log10() +
theme_bw()
enron_node_data %>%
ggplot(aes(degree)) +
geom_histogram(fill="#9898a5", color="white" binwidth = 200) +
scale_y_log10() +
theme_bw()
enron_node_data %>%
ggplot(aes(degree)) +
geom_histogram(fill="#9898a5", color="white", binwidth = 200) +
scale_y_log10() +
theme_bw()
enron_node_data %>%
ggplot(aes(degree)) +
geom_histogram(fill="#9898a5", color="white", binwidth = 200) +
scale_y_log10() +
theme_bw() +
scale_x_discrete()
enron_node_data %>%
ggplot(aes(degree)) +
geom_histogram(fill="#9898a5", color="white", binwidth = 200) +
scale_y_log10() +
theme_bw()
enron_node_data %>%
ggplot(aes(degree)) +
geom_histogram(fill="#9898a5", color="white", binwidth = 200) +
scale_y_log10() +
theme_bw() +
scale_x_discrete(limits=rep(0:1800, by=200))
enron_node_data %>%
ggplot(aes(degree)) +
geom_histogram(fill="#9898a5", color="white", binwidth = 200) +
scale_y_log10() +
theme_bw() +
scale_x_discrete(limits=range(0:1800, by=200))
enron_node_data %>%
ggplot(aes(degree)) +
geom_histogram(fill="#9898a5", color="white", binwidth = 200) +
scale_y_log10() +
theme_bw() +
scale_x_discrete(limits=range(0:1800, by=200))
range(0:1800, by=200)
range(0:1800, 200)
range(0, 1800, by=200)
range(0, 1800)
enron_node_data %>%
ggplot(aes(degree)) +
geom_histogram(fill="#9898a5", color="white", binwidth = 200) +
scale_y_log10() +
theme_bw() +
scale_x_discrete(limits=range(0, 1800, by=200))
enron_node_data %>%
ggplot(aes(degree)) +
geom_histogram(fill="#9898a5", color="white", binwidth = 200) +
scale_y_log10() +
theme_bw() +
scale_x_discrete(limits=seq(1800, by=200))
enron_node_data %>%
ggplot(aes(degree)) +
geom_histogram(fill="#9898a5", color="white", binwidth = 200) +
scale_y_log10() +
theme_bw() +
scale_x_discrete(limits=seq(0, 1800, by=200))
enron_node_data %>%
ggplot(aes(degree)) +
geom_histogram(fill="#9898a5", color="white", binwidth = 200) +
scale_y_log10() +
theme_bw()
devtools::install_github("rstudio-education/gradethis")
devtools::install_github("rstudio-education/gradethis", force=TRUE)
library(gradethis)
library(gradethis)
?import
?setRepositories
devtools::install_version()
packageVersion("devtools")
rsconnect::appDependencies()
rsconnect::appDependencies()
devtools::install.github("rstudio-education/gradethis")
devtools::install_github("rstudio-education/gradethis")
devtools::install_github("rstudio-education/gradethis", force=TRUE)
igraph::smallworld(1, 12, 2, 0.03)
smallworld(1, 12, 2, 0.03)
plot(smallworld(1, 12, 2, 0.03), vertex.size=25)
plot(play_smallworld(1, 12, 2, 0.03), vertex.size=25)
smallworld(1, 12, 2, 0.03)
plot(sample_smallworld(1, 12, 2, 0.03), vertex.size=25)
